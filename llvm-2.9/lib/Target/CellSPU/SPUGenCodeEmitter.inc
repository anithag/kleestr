//===- TableGen'erated file -------------------------------------*- C++ -*-===//
//
// Machine Code Emitter
//
// Automatically generated file, do not edit!
//
//===----------------------------------------------------------------------===//

unsigned SPUCodeEmitter::getBinaryCodeForInstr(const MachineInstr &MI) const {
  static const unsigned InstBits[] = {
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    0U,
    3388997632U,	// ABSDB
    46137344U,	// ADDXr32
    46137344U,	// ADDXr64
    46137344U,	// ADDXv2i64
    46137344U,	// ADDXv4i32
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    3087007744U,	// AHIr16
    3087007744U,	// AHIvec
    318767104U,	// AHr16
    318767104U,	// AHv8i16
    939524096U,	// AIf32
    939524096U,	// AIr32
    939524096U,	// AIv4f32
    939524096U,	// AIv4i32
    1744830464U,	// ANDBIr8
    1744830464U,	// ANDBIv16i8
    2202009600U,	// ANDCr128
    2202009600U,	// ANDCr16
    2202009600U,	// ANDCr32
    2202009600U,	// ANDCr64
    2202009600U,	// ANDCr8
    2202009600U,	// ANDCv16i8
    2202009600U,	// ANDCv16i8_conv
    2202009600U,	// ANDCv2i64
    2202009600U,	// ANDCv4i32
    2202009600U,	// ANDCv8i16
    2818572288U,	// ANDHIi8i16
    2818572288U,	// ANDHIr16
    2818572288U,	// ANDHIv8i16
    671088640U,	// ANDIi16i32
    671088640U,	// ANDIi8i32
    671088640U,	// ANDIr32
    671088640U,	// ANDIv4i32
    2197815296U,	// ANDfabs32
    2197815296U,	// ANDfabs64
    2197815296U,	// ANDfabsvec
    2197815296U,	// ANDi16i32
    2197815296U,	// ANDr128
    2197815296U,	// ANDr16
    2197815296U,	// ANDr32
    2197815296U,	// ANDr64
    2197815296U,	// ANDr8
    2197815296U,	// ANDv16i8
    2197815296U,	// ANDv2i64
    2197815296U,	// ANDv4i32
    2197815296U,	// ANDv8i16
    3405774848U,	// AVGB
    50331648U,	// Ar32
    50331648U,	// Av16i8
    50331648U,	// Av4i32
    3267362816U,	// BGXvec
    1107296256U,	// BGr32
    1107296256U,	// BGr64
    1107296256U,	// BGv2i64
    1107296256U,	// BGv4i32
    360710144U,	// BI
    2508193792U,	// BISL
    3582722048U,	// BISLED_00
    3582197760U,	// BISLED_0D
    3582459904U,	// BISLED_E0
    3581935616U,	// BISLED_ED
    637534208U,	// BR
    805306368U,	// BRA
    1711276032U,	// BRASL
    1644167168U,	// BRHNZr16
    1644167168U,	// BRHNZv8i16
    570425344U,	// BRHZr16
    570425344U,	// BRHZv8i16
    1107296256U,	// BRNZr32
    1107296256U,	// BRNZv4i32
    1711276032U,	// BRSL
    33554432U,	// BRZr32
    33554432U,	// BRZv4i32
    2944401408U,	// CBD
    729808896U,	// CBX
    4018143232U,	// CDD
    4018143232U,	// CDDf64
    3951034368U,	// CDX
    3951034368U,	// CDXf64
    2113929216U,	// CEQBIr8
    2113929216U,	// CEQBIv16i8
    197132288U,	// CEQBr8
    197132288U,	// CEQBv16i8
    3187671040U,	// CEQHIr16
    3187671040U,	// CEQHIv8i16
    331350016U,	// CEQHr16
    331350016U,	// CEQHv8i16
    1040187392U,	// CEQIr32
    1040187392U,	// CEQIv4i32
    62914560U,	// CEQr32
    62914560U,	// CEQv4i32
    3682598912U,	// CFSif32
    3682598912U,	// CFSiv4f32
    3682598912U,	// CFUif32
    3682598912U,	// CFUiv4f32
    1912602624U,	// CGTBIr8
    1912602624U,	// CGTBIv16i8
    171966464U,	// CGTBr8
    171966464U,	// CGTBv16i8
    2986344448U,	// CGTHIr16
    2986344448U,	// CGTHIv8i16
    306184192U,	// CGTHr16
    306184192U,	// CGTHv8i16
    838860800U,	// CGTIf32
    838860800U,	// CGTIr32
    838860800U,	// CGTIv4f32
    838860800U,	// CGTIv4i32
    37748736U,	// CGTr32
    37748736U,	// CGTv4i32
    1124073472U,	// CGr32
    1124073472U,	// CGr64
    1124073472U,	// CGv2i64
    1124073472U,	// CGv4i32
    2944401408U,	// CHD
    2877292544U,	// CHX
    2046820352U,	// CLGTBIr8
    2046820352U,	// CLGTBIv16i8
    188743680U,	// CLGTBr8
    188743680U,	// CLGTBv16i8
    3120562176U,	// CLGTHIr16
    3120562176U,	// CLGTHIv8i16
    322961408U,	// CLGTHr16
    322961408U,	// CLGTHv8i16
    973078528U,	// CLGTIr32
    973078528U,	// CLGTIv4i32
    54525952U,	// CLGTr32
    54525952U,	// CLGTv4i32
    2772434944U,	// CLZr32
    2772434944U,	// CLZv4i32
    759169024U,	// CNTBv16i8
    759169024U,	// CNTBv4i32
    759169024U,	// CNTBv8i16
    1535115264U,	// CSiFf32
    1535115264U,	// CSiFv4f32
    3682598912U,	// CUiFf32
    3682598912U,	// CUiFv4f32
    1870659584U,	// CWD
    1870659584U,	// CWDf32
    1803550720U,	// CWX
    1803550720U,	// CWXf32
    50331648U,	// CellSDKa
    46137344U,	// CellSDKaddx
    318767104U,	// CellSDKah
    2550136832U,	// CellSDKahi
    939524096U,	// CellSDKai
    1124073472U,	// CellSDKand
    1744830464U,	// CellSDKandbi
    2202009600U,	// CellSDKandc
    2818572288U,	// CellSDKandhi
    671088640U,	// CellSDKandi
    1107296256U,	// CellSDKbg
    3267362816U,	// CellSDKbgx
    62914560U,	// CellSDKceq
    197132288U,	// CellSDKceqb
    2113929216U,	// CellSDKceqbi
    331350016U,	// CellSDKceqh
    3187671040U,	// CellSDKceqhi
    1040187392U,	// CellSDKceqi
    562036736U,	// CellSDKcg
    37748736U,	// CellSDKcgt
    171966464U,	// CellSDKcgtb
    1912602624U,	// CellSDKcgtbi
    331350016U,	// CellSDKcgth
    3187671040U,	// CellSDKcgthi
    838860800U,	// CellSDKcgti
    1119879168U,	// CellSDKcgx
    54525952U,	// CellSDKclgt
    188743680U,	// CellSDKclgtb
    2046820352U,	// CellSDKclgtbi
    322961408U,	// CellSDKclgth
    3120562176U,	// CellSDKclgthi
    973078528U,	// CellSDKclgti
    859832320U,	// CellSDKdfa
    1933574144U,	// CellSDKdfm
    985661440U,	// CellSDKdfma
    3133145088U,	// CellSDKdfms
    4206886912U,	// CellSDKdfnma
    2059403264U,	// CellSDKdfnms
    3007315968U,	// CellSDKdfs
    591396864U,	// CellSDKfa
    1136656384U,	// CellSDKfceq
    1128267776U,	// CellSDKfcgt
    1405091840U,	// CellSDKfcmeq
    1396703232U,	// CellSDKfcmgt
    1665138688U,	// CellSDKfm
    1879048192U,	// CellSDKfma
    4026531840U,	// CellSDKfms
    2952790016U,	// CellSDKfnms
    2738880512U,	// CellSDKfs
    599785472U,	// CellSDKmpy
    805306368U,	// CellSDKmpya
    2747269120U,	// CellSDKmpyh
    1673527296U,	// CellSDKmpyhh
    1656750080U,	// CellSDKmpyhha
    1925185536U,	// CellSDKmpyhhau
    1941962752U,	// CellSDKmpyhhu
    771751936U,	// CellSDKmpyi
    3821010944U,	// CellSDKmpys
    868220928U,	// CellSDKmpyu
    2919235584U,	// CellSDKmpyui
    2181038080U,	// CellSDKnand
    2181038080U,	// CellSDKnor
    2181038080U,	// CellSDKor
    1610612736U,	// CellSDKorbi
    2470445056U,	// CellSDKorc
    2684354560U,	// CellSDKorhi
    536870912U,	// CellSDKori
    33554432U,	// CellSDKsf
    301989888U,	// CellSDKsfh
    2952790016U,	// CellSDKsfhi
    805306368U,	// CellSDKsfi
    2193620992U,	// CellSDKsfx
    2181038080U,	// CellSDKxor
    1610612736U,	// CellSDKxorbi
    2684354560U,	// CellSDKxorhi
    536870912U,	// CellSDKxori
    2059403264U,	// DFNMSf64
    2059403264U,	// DFNMSv2f64
    2151677952U,	// ENOP
    2449473536U,	// EQVr128
    2449473536U,	// EQVr128_1
    2449473536U,	// EQVr128_2
    2449473536U,	// EQVr128_3
    2449473536U,	// EQVr16
    2449473536U,	// EQVr16_1
    2449473536U,	// EQVr16_2
    2449473536U,	// EQVr16_3
    2449473536U,	// EQVr32
    2449473536U,	// EQVr32_1
    2449473536U,	// EQVr32_2
    2449473536U,	// EQVr32_3
    2449473536U,	// EQVr64
    2449473536U,	// EQVr64_1
    2449473536U,	// EQVr64_2
    2449473536U,	// EQVr64_3
    2449473536U,	// EQVr8
    2449473536U,	// EQVr8_1
    2449473536U,	// EQVr8_2
    2449473536U,	// EQVr8_3
    2449473536U,	// EQVv16i8
    2449473536U,	// EQVv16i8_1
    2449473536U,	// EQVv16i8_2
    2449473536U,	// EQVv16i8_3
    2449473536U,	// EQVv2i64
    2449473536U,	// EQVv2i64_1
    2449473536U,	// EQVv2i64_2
    2449473536U,	// EQVv2i64_3
    2449473536U,	// EQVv4i32
    2449473536U,	// EQVv4i32_1
    2449473536U,	// EQVv4i32_2
    2449473536U,	// EQVv4i32_3
    2449473536U,	// EQVv8i16
    2449473536U,	// EQVv8i16_1
    2449473536U,	// EQVv8i16_2
    2449473536U,	// EQVv8i16_3
    1484783616U,	// FAf32
    859832320U,	// FAf64
    859832320U,	// FAv2f64
    1484783616U,	// FAv4f32
    1136656384U,	// FCEQf32
    1128267776U,	// FCGTf32
    1405091840U,	// FCMEQf32
    1396703232U,	// FCMGTf32
    499122176U,	// FESDf32
    499122176U,	// FESDvec
    734003200U,	// FIf32
    734003200U,	// FIv4f32
    1879048192U,	// FMAf32
    985661440U,	// FMAf64
    985661440U,	// FMAv2f64
    1879048192U,	// FMAv4f32
    1879048192U,	// FMSf32
    3133145088U,	// FMSf64
    3133145088U,	// FMSv2f64
    1879048192U,	// FMSv4f32
    1665138688U,	// FMf32
    1665138688U,	// FMf64
    591396864U,	// FMv2f64
    1665138688U,	// FMv4f32
    4206886912U,	// FNMAf64
    4206886912U,	// FNMAv2f64
    3489660928U,	// FNMSf32
    3489660928U,	// FNMSv4f32
    2646605824U,	// FRDSf64
    922746880U,	// FRESTf32
    922746880U,	// FRESTv4f32
    1572864000U,	// FSCRRf32
    1572864000U,	// FSCRWf32
    763363328U,	// FSM64r16
    763363328U,	// FSM64r32
    2785017856U,	// FSMBIv16i8
    2785017856U,	// FSMBIv2i64
    2785017856U,	// FSMBIv4i32
    2785017856U,	// FSMBIv8i16
    1837105152U,	// FSMBv16i8
    1837105152U,	// FSMBv16i8_r16
    2910846976U,	// FSMHv8i16
    2910846976U,	// FSMHv8i16_r16
    763363328U,	// FSMr16
    763363328U,	// FSMr32
    763363328U,	// FSMv4i32
    1484783616U,	// FSf32
    2738880512U,	// FSf64
    2738880512U,	// FSv2f64
    1484783616U,	// FSv4f32
    1300234240U,	// GBBv16i8
    1300234240U,	// GBBv16i8_r16
    1300234240U,	// GBBv16i8_r32
    2373976064U,	// GBHv8i16
    2373976064U,	// GBHv8i16_r16
    2373976064U,	// GBHv8i16_r32
    226492416U,	// GBv4i32
    226492416U,	// GBv4i32_r16
    226492416U,	// GBv4i32_r32
    301989888U,	// HBRA
    0U,	// HBR_LABEL
    4261412864U,	// HEQIr32
    465567744U,	// HEQr32
    4060086272U,	// HGTIr32
    440401920U,	// HGTr32
    4194304000U,	// HLGTIr32
    457179136U,	// HLGTr32
    2214592512U,	// ILAf32
    2214592512U,	// ILAf64
    2214592512U,	// ILAhi
    2214592512U,	// ILAlo
    2214592512U,	// ILAlsa
    2214592512U,	// ILAr32
    2214592512U,	// ILAr64
    2214592512U,	// ILAv2i64
    2214592512U,	// ILAv4i32
    1090519040U,	// ILHUf32
    1090519040U,	// ILHUhi
    1090519040U,	// ILHUr32
    1090519040U,	// ILHUr64
    1090519040U,	// ILHUv2i64
    1090519040U,	// ILHUv4i32
    3238002688U,	// ILHr16
    3238002688U,	// ILHr8
    3238002688U,	// ILHv8i16
    2164260864U,	// ILf32
    2164260864U,	// ILf64
    2164260864U,	// ILr32
    2164260864U,	// ILr64
    2164260864U,	// ILv2i64
    2164260864U,	// ILv4i32
    2197815296U,	// IOHLf32
    2197815296U,	// IOHLlo
    2197815296U,	// IOHLr32
    2197815296U,	// IOHLv2i64
    2197815296U,	// IOHLv4i32
    2147483648U,	// LNOP
    2248146944U,	// LQAf32
    2248146944U,	// LQAf64
    2248146944U,	// LQAr128
    2248146944U,	// LQAr16
    2248146944U,	// LQAr32
    2248146944U,	// LQAr64
    2248146944U,	// LQAr8
    2248146944U,	// LQAv16i8
    2248146944U,	// LQAv2f64
    2248146944U,	// LQAv2i64
    2248146944U,	// LQAv4f32
    2248146944U,	// LQAv4i32
    2248146944U,	// LQAv8i16
    738197504U,	// LQDf32
    738197504U,	// LQDf64
    738197504U,	// LQDr128
    738197504U,	// LQDr16
    738197504U,	// LQDr32
    738197504U,	// LQDr64
    738197504U,	// LQDr8
    738197504U,	// LQDv16i8
    738197504U,	// LQDv2f64
    738197504U,	// LQDv2i64
    738197504U,	// LQDv4f32
    738197504U,	// LQDv4i32
    738197504U,	// LQDv8i16
    595591168U,	// LQXf32
    595591168U,	// LQXf64
    595591168U,	// LQXr128
    595591168U,	// LQXr16
    595591168U,	// LQXr32
    595591168U,	// LQXr64
    595591168U,	// LQXr8
    595591168U,	// LQXv16i8
    595591168U,	// LQXv2f64
    595591168U,	// LQXv2i64
    595591168U,	// LQXv4f32
    595591168U,	// LQXv4i32
    595591168U,	// LQXv8i16
    2181038080U,	// LRf32
    2181038080U,	// LRf64
    2181038080U,	// LRr128
    2181038080U,	// LRr16
    2181038080U,	// LRr32
    2181038080U,	// LRr64
    2181038080U,	// LRr8
    2181038080U,	// LRv16i8
    2181038080U,	// LRv2f64
    2181038080U,	// LRv2i64
    2181038080U,	// LRv4f32
    2181038080U,	// LRv4i32
    2181038080U,	// LRv8i16
    805306368U,	// MPYAr32
    805306368U,	// MPYAr32_sext
    805306368U,	// MPYAr32_sextinreg
    805306368U,	// MPYAv4i32
    1925185536U,	// MPYHHAUr32
    1925185536U,	// MPYHHAUvec
    1656750080U,	// MPYHHAr32
    1656750080U,	// MPYHHAvec
    1941962752U,	// MPYHHUr32
    1941962752U,	// MPYHHUv4i32
    1673527296U,	// MPYHHr32
    1673527296U,	// MPYHHv8i16
    2747269120U,	// MPYHr32
    2747269120U,	// MPYHv4i32
    771751936U,	// MPYIr16
    771751936U,	// MPYIvec
    3821010944U,	// MPYSr16
    3821010944U,	// MPYSv4i32
    2919235584U,	// MPYUIr16
    2919235584U,	// MPYUIvec
    868220928U,	// MPYUr16
    868220928U,	// MPYUr32
    868220928U,	// MPYUv4i32
    599785472U,	// MPYr16
    599785472U,	// MPYv8i16
    2466250752U,	// NANDr128
    2466250752U,	// NANDr16
    2466250752U,	// NANDr32
    2466250752U,	// NANDr64
    2466250752U,	// NANDr8
    2466250752U,	// NANDv16i8
    2466250752U,	// NANDv2i64
    2466250752U,	// NANDv4i32
    2466250752U,	// NANDv8i16
    2449473536U,	// NORr128
    2449473536U,	// NORr16
    2449473536U,	// NORr32
    2449473536U,	// NORr64
    2449473536U,	// NORr8
    2449473536U,	// NORv16i8
    2449473536U,	// NORv2i64
    2449473536U,	// NORv4i32
    2449473536U,	// NORv8i16
    1610612736U,	// ORBIr8
    1610612736U,	// ORBIv16i8
    2449473536U,	// ORCr128
    2449473536U,	// ORCr16
    2449473536U,	// ORCr32
    2449473536U,	// ORCr64
    2449473536U,	// ORCr8
    2449473536U,	// ORCv16i8
    2449473536U,	// ORCv2i64
    2449473536U,	// ORCv4i32
    2449473536U,	// ORCv8i16
    2684354560U,	// ORHIi8i16
    2684354560U,	// ORHIr16
    2684354560U,	// ORHIv8i16
    536870912U,	// ORIi16i32
    536870912U,	// ORIi8i32
    536870912U,	// ORIr32
    536870912U,	// ORIv4i32
    2449473536U,	// ORXv4i32
    2181038080U,	// ORf32
    2181038080U,	// ORf64
    2181038080U,	// ORr128
    2181038080U,	// ORr16
    2181038080U,	// ORr32
    2181038080U,	// ORr64
    2181038080U,	// ORr8
    2181038080U,	// ORv16i8
    2181038080U,	// ORv2f64
    2181038080U,	// ORv2i64
    2181038080U,	// ORv4f32
    2181038080U,	// ORv4i32
    2181038080U,	// ORv8i16
    360710144U,	// RET
    1040187392U,	// ROTHIr16
    1040187392U,	// ROTHIr16_r32
    1040187392U,	// ROTHIv8i16
    3187671040U,	// ROTHMIr16
    3187671040U,	// ROTHMIv8i16
    3120562176U,	// ROTHMr16
    3120562176U,	// ROTHMv8i16
    973078528U,	// ROTHr16
    973078528U,	// ROTHr16_r32
    973078528U,	// ROTHv8i16
    503316480U,	// ROTIr32
    503316480U,	// ROTIr32_i16
    503316480U,	// ROTIr32_i8
    503316480U,	// ROTIv4i32
    503316480U,	// ROTIv4i32_i16
    503316480U,	// ROTIv4i32_i8
    2113929216U,	// ROTMAHIr16
    2113929216U,	// ROTMAHIv8i16
    2046820352U,	// ROTMAHr16
    2046820352U,	// ROTMAHv8i16
    1577058304U,	// ROTMAIr32_i32
    1577058304U,	// ROTMAIr64_i32
    1577058304U,	// ROTMAIv2i64_i32
    1577058304U,	// ROTMAIv4i32_i32
    1509949440U,	// ROTMAr32
    1509949440U,	// ROTMAv4i32
    2650800128U,	// ROTMIr32
    2650800128U,	// ROTMIv4i32
    2583691264U,	// ROTMr32
    2583691264U,	// ROTMv4i32
    528482304U,	// ROTQBIIr128
    528482304U,	// ROTQBIIr64
    528482304U,	// ROTQBIIv16i8
    528482304U,	// ROTQBIIv2i64
    528482304U,	// ROTQBIIv4i32
    528482304U,	// ROTQBIIv8i16
    461373440U,	// ROTQBIr128
    461373440U,	// ROTQBIr64
    461373440U,	// ROTQBIv16i8
    461373440U,	// ROTQBIv2i64
    461373440U,	// ROTQBIv4i32
    461373440U,	// ROTQBIv8i16
    864026624U,	// ROTQBYBIv16i8_r32
    864026624U,	// ROTQBYBIv2i64_r32
    864026624U,	// ROTQBYBIv4i32_r32
    864026624U,	// ROTQBYBIv8i16_r32
    1065353216U,	// ROTQBYIi128
    1065353216U,	// ROTQBYIv16i8
    1065353216U,	// ROTQBYIv2i64
    1065353216U,	// ROTQBYIv4f32
    1065353216U,	// ROTQBYIv4i32
    1065353216U,	// ROTQBYIv8i16
    1065353216U,	// ROTQBYIvfi64
    998244352U,	// ROTQBYi128
    998244352U,	// ROTQBYv16i8
    998244352U,	// ROTQBYv2f64
    998244352U,	// ROTQBYv2i64
    998244352U,	// ROTQBYv4f32
    998244352U,	// ROTQBYv4i32
    998244352U,	// ROTQBYv8i16
    2675965952U,	// ROTQMBIIr128
    2675965952U,	// ROTQMBIIr64
    2675965952U,	// ROTQMBIIv16i8
    2675965952U,	// ROTQMBIIv2i64
    2675965952U,	// ROTQMBIIv4i32
    2675965952U,	// ROTQMBIIv8i16
    2608857088U,	// ROTQMBIr128
    2608857088U,	// ROTQMBIr64
    2608857088U,	// ROTQMBIv16i8
    2608857088U,	// ROTQMBIv2i64
    2608857088U,	// ROTQMBIv4i32
    2608857088U,	// ROTQMBIv8i16
    3011510272U,	// ROTQMBYBIr128
    3011510272U,	// ROTQMBYBIv16i8
    3011510272U,	// ROTQMBYBIv2i64
    3011510272U,	// ROTQMBYBIv4i32
    3011510272U,	// ROTQMBYBIv8i16
    3212836864U,	// ROTQMBYIr128
    3212836864U,	// ROTQMBYIr128_zext_r16
    3212836864U,	// ROTQMBYIr128_zext_r32
    3212836864U,	// ROTQMBYIr128_zext_r64
    3212836864U,	// ROTQMBYIr128_zext_r8
    3212836864U,	// ROTQMBYIr64
    3212836864U,	// ROTQMBYIv16i8
    3212836864U,	// ROTQMBYIv2i64
    3212836864U,	// ROTQMBYIv4i32
    3212836864U,	// ROTQMBYIv8i16
    3145728000U,	// ROTQMBYr128
    3145728000U,	// ROTQMBYr64
    3145728000U,	// ROTQMBYv16i8
    3145728000U,	// ROTQMBYv2i64
    3145728000U,	// ROTQMBYv4i32
    3145728000U,	// ROTQMBYv8i16
    436207616U,	// ROTr32
    436207616U,	// ROTr32_r16_anyext
    436207616U,	// ROTr32_r8_anyext
    436207616U,	// ROTv4i32
    2147483648U,	// SELBf32_cond
    2147483648U,	// SELBf64_cond
    2147483648U,	// SELBr128
    2147483648U,	// SELBr16
    2147483648U,	// SELBr16_cond
    2147483648U,	// SELBr32
    2147483648U,	// SELBr32_cond
    2147483648U,	// SELBr64
    2147483648U,	// SELBr64_cond
    2147483648U,	// SELBr8
    2147483648U,	// SELBr8_cond
    2147483648U,	// SELBv16i8
    2147483648U,	// SELBv16i8_cond
    2147483648U,	// SELBv16i8_vcond
    2147483648U,	// SELBv2i64
    2147483648U,	// SELBv2i64_cond
    2147483648U,	// SELBv2i64_vcond
    2147483648U,	// SELBv4f32_cond
    2147483648U,	// SELBv4i32
    2147483648U,	// SELBv4i32_cond
    2147483648U,	// SELBv4i32_vcond
    2147483648U,	// SELBv8i16
    2147483648U,	// SELBv8i16_cond
    2147483648U,	// SELBv8i16_vcond
    2952790016U,	// SFHIr16
    2952790016U,	// SFHIvec
    301989888U,	// SFHr16
    301989888U,	// SFHvec
    805306368U,	// SFIr32
    805306368U,	// SFIvec
    2193620992U,	// SFXr32
    2193620992U,	// SFXr64
    2193620992U,	// SFXv2i64
    2193620992U,	// SFXv4i32
    33554432U,	// SFr32
    33554432U,	// SFvec
    4194304000U,	// SHLHIr16
    4194304000U,	// SHLHIv8i16
    4194304000U,	// SHLHr16
    4194304000U,	// SHLHr16_r32
    4194304000U,	// SHLHv8i16
    4194304000U,	// SHLIr32
    4194304000U,	// SHLIv4i32
    3749707776U,	// SHLQBIIv16i8
    3749707776U,	// SHLQBIIv2f64
    3749707776U,	// SHLQBIIv2i64
    3749707776U,	// SHLQBIIv4f32
    3749707776U,	// SHLQBIIv4i32
    3749707776U,	// SHLQBIIv8i16
    3682598912U,	// SHLQBIr128
    3682598912U,	// SHLQBIv16i8
    3682598912U,	// SHLQBIv2f64
    3682598912U,	// SHLQBIv2i64
    3682598912U,	// SHLQBIv4f32
    3682598912U,	// SHLQBIv4i32
    3682598912U,	// SHLQBIv8i16
    970981376U,	// SHLQBYBIr128
    970981376U,	// SHLQBYBIv16i8
    970981376U,	// SHLQBYBIv2f64
    970981376U,	// SHLQBYBIv2i64
    970981376U,	// SHLQBYBIv4f32
    970981376U,	// SHLQBYBIv4i32
    970981376U,	// SHLQBYBIv8i16
    4286578688U,	// SHLQBYIr128
    4286578688U,	// SHLQBYIv16i8
    4286578688U,	// SHLQBYIv2f64
    4286578688U,	// SHLQBYIv2i64
    4286578688U,	// SHLQBYIv4f32
    4286578688U,	// SHLQBYIv4i32
    4286578688U,	// SHLQBYIv8i16
    4219469824U,	// SHLQBYr128
    4219469824U,	// SHLQBYv16i8
    4219469824U,	// SHLQBYv2f64
    4219469824U,	// SHLQBYv2i64
    4219469824U,	// SHLQBYv4f32
    4219469824U,	// SHLQBYv4i32
    4219469824U,	// SHLQBYv8i16
    4194304000U,	// SHLr32
    4194304000U,	// SHLv4i32
    2147483648U,	// SHUFBgprc
    2147483648U,	// SHUFBv16i8
    2147483648U,	// SHUFBv16i8_m32
    2147483648U,	// SHUFBv2f64
    2147483648U,	// SHUFBv2f64_m32
    2147483648U,	// SHUFBv2i64
    2147483648U,	// SHUFBv2i64_m32
    2147483648U,	// SHUFBv4f32
    2147483648U,	// SHUFBv4f32_m32
    2147483648U,	// SHUFBv4i32
    2147483648U,	// SHUFBv4i32_m32
    2147483648U,	// SHUFBv8i16
    2147483648U,	// SHUFBv8i16_m32
    75497472U,	// STQAf32
    75497472U,	// STQAf64
    75497472U,	// STQAr128
    75497472U,	// STQAr16
    75497472U,	// STQAr32
    75497472U,	// STQAr64
    75497472U,	// STQAr8
    150994944U,	// STQAv16i8
    150994944U,	// STQAv2f64
    150994944U,	// STQAv2i64
    150994944U,	// STQAv4f32
    150994944U,	// STQAv4i32
    150994944U,	// STQAv8i16
    603979776U,	// STQDf32
    603979776U,	// STQDf64
    603979776U,	// STQDr128
    603979776U,	// STQDr16
    603979776U,	// STQDr32
    603979776U,	// STQDr64
    603979776U,	// STQDr8
    603979776U,	// STQDv16i8
    603979776U,	// STQDv2f64
    603979776U,	// STQDv2i64
    603979776U,	// STQDv4f32
    603979776U,	// STQDv4i32
    603979776U,	// STQDv8i16
    75497472U,	// STQXf32
    75497472U,	// STQXf64
    75497472U,	// STQXr128
    75497472U,	// STQXr16
    75497472U,	// STQXr32
    75497472U,	// STQXr64
    75497472U,	// STQXr8
    75497472U,	// STQXv16i8
    75497472U,	// STQXv2f64
    75497472U,	// STQXv2i64
    75497472U,	// STQXv4f32
    75497472U,	// STQXv4i32
    75497472U,	// STQXv8i16
    3393191936U,	// SUMB
    1610612736U,	// XORBIr8
    1610612736U,	// XORBIv16i8
    2684354560U,	// XORHIr16
    2684354560U,	// XORHIv8i16
    536870912U,	// XORIr32
    536870912U,	// XORIv4i32
    2449473536U,	// XORfneg32
    2449473536U,	// XORfneg64
    2449473536U,	// XORfnegvec
    2449473536U,	// XORr128
    2449473536U,	// XORr16
    2449473536U,	// XORr32
    2449473536U,	// XORr64
    2449473536U,	// XORr8
    2449473536U,	// XORv16i8
    2449473536U,	// XORv2i64
    2449473536U,	// XORv4i32
    2449473536U,	// XORv8i16
    1832910848U,	// XSBHr16
    1832910848U,	// XSBHr32
    1832910848U,	// XSBHr64
    1832910848U,	// XSBHr8
    1832910848U,	// XSBHv16i8
    1832910848U,	// XSHWr16
    1832910848U,	// XSHWr32
    1832910848U,	// XSHWr64
    1832910848U,	// XSHWv4i32
    1698693120U,	// XSWDr64
    1698693120U,	// XSWDr64_inreg
    1698693120U,	// XSWDv2i64
    0U
  };
  const unsigned opcode = MI.getOpcode();
  unsigned Value = InstBits[opcode];
  unsigned op = 0;
  (void)op;  // suppress warning
  switch (opcode) {
    case SPU::ADJCALLSTACKDOWN:
    case SPU::ADJCALLSTACKUP:
    case SPU::ENOP:
    case SPU::HBR_LABEL:
    case SPU::LNOP:
    case SPU::RET: {
      break;
    }
    case SPU::LRf32:
    case SPU::LRf64:
    case SPU::LRr128:
    case SPU::LRr16:
    case SPU::LRr32:
    case SPU::LRr64:
    case SPU::LRr8:
    case SPU::LRv16i8:
    case SPU::LRv2f64:
    case SPU::LRv2i64:
    case SPU::LRv4f32:
    case SPU::LRv4i32:
    case SPU::LRv8i16: {
      // op: RA
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 127U) << 14;
      Value |= (op & 127U) << 7;
      // op: RT
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= op & 127U;
      break;
    }
    case SPU::HEQr32:
    case SPU::HGTr32:
    case SPU::HLGTr32: {
      // op: RA
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 127U) << 7;
      // op: RB
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= (op & 127U) << 14;
      break;
    }
    case SPU::CellSDKfma:
    case SPU::CellSDKfms:
    case SPU::CellSDKfnms:
    case SPU::CellSDKmpya:
    case SPU::FMAf32:
    case SPU::FMAv4f32:
    case SPU::FMSf32:
    case SPU::FMSv4f32:
    case SPU::FNMSf32:
    case SPU::FNMSv4f32:
    case SPU::MPYAr32:
    case SPU::MPYAr32_sext:
    case SPU::MPYAr32_sextinreg:
    case SPU::MPYAv4i32:
    case SPU::SELBf32_cond:
    case SPU::SELBf64_cond:
    case SPU::SELBr128:
    case SPU::SELBr16:
    case SPU::SELBr16_cond:
    case SPU::SELBr32:
    case SPU::SELBr32_cond:
    case SPU::SELBr64:
    case SPU::SELBr64_cond:
    case SPU::SELBr8:
    case SPU::SELBr8_cond:
    case SPU::SELBv16i8:
    case SPU::SELBv16i8_cond:
    case SPU::SELBv16i8_vcond:
    case SPU::SELBv2i64:
    case SPU::SELBv2i64_cond:
    case SPU::SELBv2i64_vcond:
    case SPU::SELBv4f32_cond:
    case SPU::SELBv4i32:
    case SPU::SELBv4i32_cond:
    case SPU::SELBv4i32_vcond:
    case SPU::SELBv8i16:
    case SPU::SELBv8i16_cond:
    case SPU::SELBv8i16_vcond:
    case SPU::SHUFBgprc:
    case SPU::SHUFBv16i8:
    case SPU::SHUFBv16i8_m32:
    case SPU::SHUFBv2f64:
    case SPU::SHUFBv2f64_m32:
    case SPU::SHUFBv2i64:
    case SPU::SHUFBv2i64_m32:
    case SPU::SHUFBv4f32:
    case SPU::SHUFBv4f32_m32:
    case SPU::SHUFBv4i32:
    case SPU::SHUFBv4i32_m32:
    case SPU::SHUFBv8i16:
    case SPU::SHUFBv8i16_m32: {
      // op: RA
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 127U) << 7;
      // op: RB
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= (op & 127U) << 14;
      // op: RC
      op = getMachineOpValue(MI, MI.getOperand(2));
      Value |= op & 127U;
      // op: RT
      op = getMachineOpValue(MI, MI.getOperand(3));
      Value |= (op & 127U) << 21;
      break;
    }
    case SPU::ABSDB:
    case SPU::ADDXr32:
    case SPU::ADDXr64:
    case SPU::ADDXv2i64:
    case SPU::ADDXv4i32:
    case SPU::AHr16:
    case SPU::AHv8i16:
    case SPU::ANDCr128:
    case SPU::ANDCr16:
    case SPU::ANDCr32:
    case SPU::ANDCr64:
    case SPU::ANDCr8:
    case SPU::ANDCv16i8:
    case SPU::ANDCv16i8_conv:
    case SPU::ANDCv2i64:
    case SPU::ANDCv4i32:
    case SPU::ANDCv8i16:
    case SPU::ANDfabs32:
    case SPU::ANDfabs64:
    case SPU::ANDfabsvec:
    case SPU::ANDi16i32:
    case SPU::ANDr128:
    case SPU::ANDr16:
    case SPU::ANDr32:
    case SPU::ANDr64:
    case SPU::ANDr8:
    case SPU::ANDv16i8:
    case SPU::ANDv2i64:
    case SPU::ANDv4i32:
    case SPU::ANDv8i16:
    case SPU::AVGB:
    case SPU::Ar32:
    case SPU::Av16i8:
    case SPU::Av4i32:
    case SPU::BGXvec:
    case SPU::BGr32:
    case SPU::BGr64:
    case SPU::BGv2i64:
    case SPU::BGv4i32:
    case SPU::CBX:
    case SPU::CDX:
    case SPU::CDXf64:
    case SPU::CEQBr8:
    case SPU::CEQBv16i8:
    case SPU::CEQHr16:
    case SPU::CEQHv8i16:
    case SPU::CEQr32:
    case SPU::CEQv4i32:
    case SPU::CGTBr8:
    case SPU::CGTBv16i8:
    case SPU::CGTHr16:
    case SPU::CGTHv8i16:
    case SPU::CGTr32:
    case SPU::CGTv4i32:
    case SPU::CGr32:
    case SPU::CGr64:
    case SPU::CGv2i64:
    case SPU::CGv4i32:
    case SPU::CHX:
    case SPU::CLGTBr8:
    case SPU::CLGTBv16i8:
    case SPU::CLGTHr16:
    case SPU::CLGTHv8i16:
    case SPU::CLGTr32:
    case SPU::CLGTv4i32:
    case SPU::CWX:
    case SPU::CWXf32:
    case SPU::CellSDKa:
    case SPU::CellSDKaddx:
    case SPU::CellSDKah:
    case SPU::CellSDKand:
    case SPU::CellSDKandc:
    case SPU::CellSDKbg:
    case SPU::CellSDKbgx:
    case SPU::CellSDKceq:
    case SPU::CellSDKceqb:
    case SPU::CellSDKceqh:
    case SPU::CellSDKcg:
    case SPU::CellSDKcgt:
    case SPU::CellSDKcgtb:
    case SPU::CellSDKcgth:
    case SPU::CellSDKcgx:
    case SPU::CellSDKclgt:
    case SPU::CellSDKclgtb:
    case SPU::CellSDKclgth:
    case SPU::CellSDKdfa:
    case SPU::CellSDKdfm:
    case SPU::CellSDKdfma:
    case SPU::CellSDKdfms:
    case SPU::CellSDKdfnma:
    case SPU::CellSDKdfnms:
    case SPU::CellSDKdfs:
    case SPU::CellSDKfa:
    case SPU::CellSDKfceq:
    case SPU::CellSDKfcgt:
    case SPU::CellSDKfcmeq:
    case SPU::CellSDKfcmgt:
    case SPU::CellSDKfm:
    case SPU::CellSDKfs:
    case SPU::CellSDKmpy:
    case SPU::CellSDKmpyh:
    case SPU::CellSDKmpyhh:
    case SPU::CellSDKmpyhha:
    case SPU::CellSDKmpyhhau:
    case SPU::CellSDKmpyhhu:
    case SPU::CellSDKmpys:
    case SPU::CellSDKmpyu:
    case SPU::CellSDKnand:
    case SPU::CellSDKnor:
    case SPU::CellSDKor:
    case SPU::CellSDKorc:
    case SPU::CellSDKsf:
    case SPU::CellSDKsfh:
    case SPU::CellSDKsfx:
    case SPU::CellSDKxor:
    case SPU::DFNMSf64:
    case SPU::DFNMSv2f64:
    case SPU::EQVr128:
    case SPU::EQVr128_1:
    case SPU::EQVr128_2:
    case SPU::EQVr128_3:
    case SPU::EQVr16:
    case SPU::EQVr16_1:
    case SPU::EQVr16_2:
    case SPU::EQVr16_3:
    case SPU::EQVr32:
    case SPU::EQVr32_1:
    case SPU::EQVr32_2:
    case SPU::EQVr32_3:
    case SPU::EQVr64:
    case SPU::EQVr64_1:
    case SPU::EQVr64_2:
    case SPU::EQVr64_3:
    case SPU::EQVr8:
    case SPU::EQVr8_1:
    case SPU::EQVr8_2:
    case SPU::EQVr8_3:
    case SPU::EQVv16i8:
    case SPU::EQVv16i8_1:
    case SPU::EQVv16i8_2:
    case SPU::EQVv16i8_3:
    case SPU::EQVv2i64:
    case SPU::EQVv2i64_1:
    case SPU::EQVv2i64_2:
    case SPU::EQVv2i64_3:
    case SPU::EQVv4i32:
    case SPU::EQVv4i32_1:
    case SPU::EQVv4i32_2:
    case SPU::EQVv4i32_3:
    case SPU::EQVv8i16:
    case SPU::EQVv8i16_1:
    case SPU::EQVv8i16_2:
    case SPU::EQVv8i16_3:
    case SPU::FAf32:
    case SPU::FAf64:
    case SPU::FAv2f64:
    case SPU::FAv4f32:
    case SPU::FCEQf32:
    case SPU::FCGTf32:
    case SPU::FCMEQf32:
    case SPU::FCMGTf32:
    case SPU::FIf32:
    case SPU::FIv4f32:
    case SPU::FMAf64:
    case SPU::FMAv2f64:
    case SPU::FMSf64:
    case SPU::FMSv2f64:
    case SPU::FMf32:
    case SPU::FMf64:
    case SPU::FMv2f64:
    case SPU::FMv4f32:
    case SPU::FNMAf64:
    case SPU::FNMAv2f64:
    case SPU::FSf32:
    case SPU::FSf64:
    case SPU::FSv2f64:
    case SPU::FSv4f32:
    case SPU::LQXf32:
    case SPU::LQXf64:
    case SPU::LQXr128:
    case SPU::LQXr16:
    case SPU::LQXr32:
    case SPU::LQXr64:
    case SPU::LQXr8:
    case SPU::LQXv16i8:
    case SPU::LQXv2f64:
    case SPU::LQXv2i64:
    case SPU::LQXv4f32:
    case SPU::LQXv4i32:
    case SPU::LQXv8i16:
    case SPU::MPYHHAUr32:
    case SPU::MPYHHAUvec:
    case SPU::MPYHHAr32:
    case SPU::MPYHHAvec:
    case SPU::MPYHHUr32:
    case SPU::MPYHHUv4i32:
    case SPU::MPYHHr32:
    case SPU::MPYHHv8i16:
    case SPU::MPYHr32:
    case SPU::MPYHv4i32:
    case SPU::MPYSr16:
    case SPU::MPYSv4i32:
    case SPU::MPYUr16:
    case SPU::MPYUr32:
    case SPU::MPYUv4i32:
    case SPU::MPYr16:
    case SPU::MPYv8i16:
    case SPU::NANDr128:
    case SPU::NANDr16:
    case SPU::NANDr32:
    case SPU::NANDr64:
    case SPU::NANDr8:
    case SPU::NANDv16i8:
    case SPU::NANDv2i64:
    case SPU::NANDv4i32:
    case SPU::NANDv8i16:
    case SPU::NORr128:
    case SPU::NORr16:
    case SPU::NORr32:
    case SPU::NORr64:
    case SPU::NORr8:
    case SPU::NORv16i8:
    case SPU::NORv2i64:
    case SPU::NORv4i32:
    case SPU::NORv8i16:
    case SPU::ORCr128:
    case SPU::ORCr16:
    case SPU::ORCr32:
    case SPU::ORCr64:
    case SPU::ORCr8:
    case SPU::ORCv16i8:
    case SPU::ORCv2i64:
    case SPU::ORCv4i32:
    case SPU::ORCv8i16:
    case SPU::ORXv4i32:
    case SPU::ORf32:
    case SPU::ORf64:
    case SPU::ORr128:
    case SPU::ORr16:
    case SPU::ORr32:
    case SPU::ORr64:
    case SPU::ORr8:
    case SPU::ORv16i8:
    case SPU::ORv2f64:
    case SPU::ORv2i64:
    case SPU::ORv4f32:
    case SPU::ORv4i32:
    case SPU::ORv8i16:
    case SPU::ROTHMr16:
    case SPU::ROTHMv8i16:
    case SPU::ROTHr16:
    case SPU::ROTHr16_r32:
    case SPU::ROTHv8i16:
    case SPU::ROTMAHIr16:
    case SPU::ROTMAHIv8i16:
    case SPU::ROTMAHr16:
    case SPU::ROTMAHv8i16:
    case SPU::ROTMAIr32_i32:
    case SPU::ROTMAIr64_i32:
    case SPU::ROTMAIv2i64_i32:
    case SPU::ROTMAIv4i32_i32:
    case SPU::ROTMAr32:
    case SPU::ROTMAv4i32:
    case SPU::ROTMr32:
    case SPU::ROTMv4i32:
    case SPU::ROTQBIr128:
    case SPU::ROTQBIr64:
    case SPU::ROTQBIv16i8:
    case SPU::ROTQBIv2i64:
    case SPU::ROTQBIv4i32:
    case SPU::ROTQBIv8i16:
    case SPU::ROTQBYi128:
    case SPU::ROTQBYv16i8:
    case SPU::ROTQBYv2f64:
    case SPU::ROTQBYv2i64:
    case SPU::ROTQBYv4f32:
    case SPU::ROTQBYv4i32:
    case SPU::ROTQBYv8i16:
    case SPU::ROTQMBIr128:
    case SPU::ROTQMBIr64:
    case SPU::ROTQMBIv16i8:
    case SPU::ROTQMBIv2i64:
    case SPU::ROTQMBIv4i32:
    case SPU::ROTQMBIv8i16:
    case SPU::ROTQMBYBIr128:
    case SPU::ROTQMBYBIv16i8:
    case SPU::ROTQMBYBIv2i64:
    case SPU::ROTQMBYBIv4i32:
    case SPU::ROTQMBYBIv8i16:
    case SPU::ROTQMBYr128:
    case SPU::ROTQMBYr64:
    case SPU::ROTQMBYv16i8:
    case SPU::ROTQMBYv2i64:
    case SPU::ROTQMBYv4i32:
    case SPU::ROTQMBYv8i16:
    case SPU::ROTr32:
    case SPU::ROTr32_r16_anyext:
    case SPU::ROTr32_r8_anyext:
    case SPU::ROTv4i32:
    case SPU::SFHr16:
    case SPU::SFHvec:
    case SPU::SFXr32:
    case SPU::SFXr64:
    case SPU::SFXv2i64:
    case SPU::SFXv4i32:
    case SPU::SFr32:
    case SPU::SFvec:
    case SPU::SHLHr16:
    case SPU::SHLHr16_r32:
    case SPU::SHLHv8i16:
    case SPU::SHLQBIr128:
    case SPU::SHLQBIv16i8:
    case SPU::SHLQBIv2f64:
    case SPU::SHLQBIv2i64:
    case SPU::SHLQBIv4f32:
    case SPU::SHLQBIv4i32:
    case SPU::SHLQBIv8i16:
    case SPU::SHLQBYBIr128:
    case SPU::SHLQBYBIv16i8:
    case SPU::SHLQBYBIv2f64:
    case SPU::SHLQBYBIv2i64:
    case SPU::SHLQBYBIv4f32:
    case SPU::SHLQBYBIv4i32:
    case SPU::SHLQBYBIv8i16:
    case SPU::SHLr32:
    case SPU::SHLv4i32:
    case SPU::STQXf32:
    case SPU::STQXf64:
    case SPU::STQXr128:
    case SPU::STQXr16:
    case SPU::STQXr32:
    case SPU::STQXr64:
    case SPU::STQXr8:
    case SPU::STQXv16i8:
    case SPU::STQXv2f64:
    case SPU::STQXv2i64:
    case SPU::STQXv4f32:
    case SPU::STQXv4i32:
    case SPU::STQXv8i16:
    case SPU::SUMB:
    case SPU::XORfneg32:
    case SPU::XORfneg64:
    case SPU::XORfnegvec:
    case SPU::XORr128:
    case SPU::XORr16:
    case SPU::XORr32:
    case SPU::XORr64:
    case SPU::XORr8:
    case SPU::XORv16i8:
    case SPU::XORv2i64:
    case SPU::XORv4i32:
    case SPU::XORv8i16: {
      // op: RA
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 127U) << 7;
      // op: RB
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= (op & 127U) << 14;
      // op: RT
      op = getMachineOpValue(MI, MI.getOperand(2));
      Value |= op & 127U;
      break;
    }
    case SPU::CFSif32:
    case SPU::CFSiv4f32:
    case SPU::CFUif32:
    case SPU::CFUiv4f32:
    case SPU::CLZr32:
    case SPU::CLZv4i32:
    case SPU::CNTBv16i8:
    case SPU::CNTBv4i32:
    case SPU::CNTBv8i16:
    case SPU::CSiFf32:
    case SPU::CSiFv4f32:
    case SPU::CUiFf32:
    case SPU::CUiFv4f32:
    case SPU::FESDf32:
    case SPU::FESDvec:
    case SPU::FRDSf64:
    case SPU::FRESTf32:
    case SPU::FRESTv4f32:
    case SPU::FSCRWf32:
    case SPU::FSM64r16:
    case SPU::FSM64r32:
    case SPU::FSMBv16i8:
    case SPU::FSMBv16i8_r16:
    case SPU::FSMHv8i16:
    case SPU::FSMHv8i16_r16:
    case SPU::FSMr16:
    case SPU::FSMr32:
    case SPU::FSMv4i32:
    case SPU::GBBv16i8:
    case SPU::GBBv16i8_r16:
    case SPU::GBBv16i8_r32:
    case SPU::GBHv8i16:
    case SPU::GBHv8i16_r16:
    case SPU::GBHv8i16_r32:
    case SPU::GBv4i32:
    case SPU::GBv4i32_r16:
    case SPU::GBv4i32_r32:
    case SPU::XSBHr16:
    case SPU::XSBHr32:
    case SPU::XSBHr64:
    case SPU::XSBHr8:
    case SPU::XSBHv16i8:
    case SPU::XSHWr16:
    case SPU::XSHWr32:
    case SPU::XSHWr64:
    case SPU::XSHWv4i32:
    case SPU::XSWDr64:
    case SPU::XSWDr64_inreg:
    case SPU::XSWDv2i64: {
      // op: RA
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 127U) << 7;
      // op: RT
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= op & 127U;
      break;
    }
    case SPU::BI:
    case SPU::BISL: {
      // op: RB
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 127U) << 14;
      break;
    }
    case SPU::FSCRRf32: {
      // op: RT
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= op & 127U;
      break;
    }
    case SPU::BISLED_00:
    case SPU::BISLED_0D:
    case SPU::BISLED_E0:
    case SPU::BISLED_ED: {
      // op: Rcalldest
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 127U) << 7;
      break;
    }
    case SPU::HEQIr32:
    case SPU::HGTIr32:
    case SPU::HLGTIr32: {
      // op: i10
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 1023U) << 14;
      // op: RA
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= (op & 127U) << 7;
      break;
    }
    case SPU::AHIr16:
    case SPU::AHIvec:
    case SPU::AIf32:
    case SPU::AIr32:
    case SPU::AIv4f32:
    case SPU::AIv4i32:
    case SPU::ANDBIr8:
    case SPU::ANDBIv16i8:
    case SPU::ANDHIi8i16:
    case SPU::ANDHIr16:
    case SPU::ANDHIv8i16:
    case SPU::ANDIi16i32:
    case SPU::ANDIi8i32:
    case SPU::ANDIr32:
    case SPU::ANDIv4i32:
    case SPU::CEQBIr8:
    case SPU::CEQBIv16i8:
    case SPU::CEQHIr16:
    case SPU::CEQHIv8i16:
    case SPU::CEQIr32:
    case SPU::CEQIv4i32:
    case SPU::CGTBIr8:
    case SPU::CGTBIv16i8:
    case SPU::CGTHIr16:
    case SPU::CGTHIv8i16:
    case SPU::CGTIf32:
    case SPU::CGTIr32:
    case SPU::CGTIv4f32:
    case SPU::CGTIv4i32:
    case SPU::CLGTBIr8:
    case SPU::CLGTBIv16i8:
    case SPU::CLGTHIr16:
    case SPU::CLGTHIv8i16:
    case SPU::CLGTIr32:
    case SPU::CLGTIv4i32:
    case SPU::CellSDKahi:
    case SPU::CellSDKai:
    case SPU::CellSDKandbi:
    case SPU::CellSDKandhi:
    case SPU::CellSDKandi:
    case SPU::CellSDKceqbi:
    case SPU::CellSDKceqhi:
    case SPU::CellSDKceqi:
    case SPU::CellSDKcgtbi:
    case SPU::CellSDKcgthi:
    case SPU::CellSDKcgti:
    case SPU::CellSDKclgtbi:
    case SPU::CellSDKclgthi:
    case SPU::CellSDKclgti:
    case SPU::CellSDKmpyi:
    case SPU::CellSDKmpyui:
    case SPU::CellSDKorbi:
    case SPU::CellSDKorhi:
    case SPU::CellSDKori:
    case SPU::CellSDKsfhi:
    case SPU::CellSDKsfi:
    case SPU::CellSDKxorbi:
    case SPU::CellSDKxorhi:
    case SPU::CellSDKxori:
    case SPU::LQDf32:
    case SPU::LQDf64:
    case SPU::LQDr128:
    case SPU::LQDr16:
    case SPU::LQDr32:
    case SPU::LQDr64:
    case SPU::LQDr8:
    case SPU::LQDv16i8:
    case SPU::LQDv2f64:
    case SPU::LQDv2i64:
    case SPU::LQDv4f32:
    case SPU::LQDv4i32:
    case SPU::LQDv8i16:
    case SPU::MPYIr16:
    case SPU::MPYIvec:
    case SPU::MPYUIr16:
    case SPU::MPYUIvec:
    case SPU::ORBIr8:
    case SPU::ORBIv16i8:
    case SPU::ORHIi8i16:
    case SPU::ORHIr16:
    case SPU::ORHIv8i16:
    case SPU::ORIi16i32:
    case SPU::ORIi8i32:
    case SPU::ORIr32:
    case SPU::ORIv4i32:
    case SPU::SFHIr16:
    case SPU::SFHIvec:
    case SPU::SFIr32:
    case SPU::SFIvec:
    case SPU::STQDf32:
    case SPU::STQDf64:
    case SPU::STQDr128:
    case SPU::STQDr16:
    case SPU::STQDr32:
    case SPU::STQDr64:
    case SPU::STQDr8:
    case SPU::STQDv16i8:
    case SPU::STQDv2f64:
    case SPU::STQDv2i64:
    case SPU::STQDv4f32:
    case SPU::STQDv4i32:
    case SPU::STQDv8i16:
    case SPU::XORBIr8:
    case SPU::XORBIv16i8:
    case SPU::XORHIr16:
    case SPU::XORHIv8i16:
    case SPU::XORIr32:
    case SPU::XORIv4i32: {
      // op: i10
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 1023U) << 14;
      // op: RA
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= (op & 127U) << 7;
      // op: RT
      op = getMachineOpValue(MI, MI.getOperand(2));
      Value |= op & 127U;
      break;
    }
    case SPU::BR:
    case SPU::BRA:
    case SPU::BRASL:
    case SPU::BRSL: {
      // op: i16
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 65535U) << 7;
      break;
    }
    case SPU::HBRA: {
      // op: i16
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 65535U) << 7;
      // op: RO
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= (op & 384U) << 16;
      Value |= op & 127U;
      break;
    }
    case SPU::BRHNZr16:
    case SPU::BRHNZv8i16:
    case SPU::BRHZr16:
    case SPU::BRHZv8i16:
    case SPU::BRNZr32:
    case SPU::BRNZv4i32:
    case SPU::BRZr32:
    case SPU::BRZv4i32:
    case SPU::FSMBIv16i8:
    case SPU::FSMBIv2i64:
    case SPU::FSMBIv4i32:
    case SPU::FSMBIv8i16:
    case SPU::ILHUf32:
    case SPU::ILHUhi:
    case SPU::ILHUr32:
    case SPU::ILHUr64:
    case SPU::ILHUv2i64:
    case SPU::ILHUv4i32:
    case SPU::ILHr16:
    case SPU::ILHr8:
    case SPU::ILHv8i16:
    case SPU::ILf32:
    case SPU::ILf64:
    case SPU::ILr32:
    case SPU::ILr64:
    case SPU::ILv2i64:
    case SPU::ILv4i32:
    case SPU::LQAf32:
    case SPU::LQAf64:
    case SPU::LQAr128:
    case SPU::LQAr16:
    case SPU::LQAr32:
    case SPU::LQAr64:
    case SPU::LQAr8:
    case SPU::LQAv16i8:
    case SPU::LQAv2f64:
    case SPU::LQAv2i64:
    case SPU::LQAv4f32:
    case SPU::LQAv4i32:
    case SPU::LQAv8i16:
    case SPU::STQAf32:
    case SPU::STQAf64:
    case SPU::STQAr128:
    case SPU::STQAr16:
    case SPU::STQAr32:
    case SPU::STQAr64:
    case SPU::STQAr8:
    case SPU::STQAv16i8:
    case SPU::STQAv2f64:
    case SPU::STQAv2i64:
    case SPU::STQAv4f32:
    case SPU::STQAv4i32:
    case SPU::STQAv8i16: {
      // op: i16
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 65535U) << 7;
      // op: RT
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= op & 127U;
      break;
    }
    case SPU::IOHLf32:
    case SPU::IOHLlo:
    case SPU::IOHLr32:
    case SPU::IOHLv2i64:
    case SPU::IOHLv4i32: {
      // op: i16
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 65535U) << 7;
      // op: RT
      op = getMachineOpValue(MI, MI.getOperand(2));
      Value |= op & 127U;
      break;
    }
    case SPU::ILAf32:
    case SPU::ILAf64:
    case SPU::ILAhi:
    case SPU::ILAlo:
    case SPU::ILAlsa:
    case SPU::ILAr32:
    case SPU::ILAr64:
    case SPU::ILAv2i64:
    case SPU::ILAv4i32: {
      // op: i18
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 262143U) << 7;
      // op: RT
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= op & 127U;
      break;
    }
    case SPU::CBD:
    case SPU::CDD:
    case SPU::CDDf64:
    case SPU::CHD:
    case SPU::CWD:
    case SPU::CWDf32:
    case SPU::ROTHIr16:
    case SPU::ROTHIr16_r32:
    case SPU::ROTHIv8i16:
    case SPU::ROTHMIr16:
    case SPU::ROTHMIv8i16:
    case SPU::ROTIr32:
    case SPU::ROTIr32_i16:
    case SPU::ROTIr32_i8:
    case SPU::ROTIv4i32:
    case SPU::ROTIv4i32_i16:
    case SPU::ROTIv4i32_i8:
    case SPU::ROTMIr32:
    case SPU::ROTMIv4i32:
    case SPU::ROTQBIIr128:
    case SPU::ROTQBIIr64:
    case SPU::ROTQBIIv16i8:
    case SPU::ROTQBIIv2i64:
    case SPU::ROTQBIIv4i32:
    case SPU::ROTQBIIv8i16:
    case SPU::ROTQBYBIv16i8_r32:
    case SPU::ROTQBYBIv2i64_r32:
    case SPU::ROTQBYBIv4i32_r32:
    case SPU::ROTQBYBIv8i16_r32:
    case SPU::ROTQBYIi128:
    case SPU::ROTQBYIv16i8:
    case SPU::ROTQBYIv2i64:
    case SPU::ROTQBYIv4f32:
    case SPU::ROTQBYIv4i32:
    case SPU::ROTQBYIv8i16:
    case SPU::ROTQBYIvfi64:
    case SPU::ROTQMBIIr128:
    case SPU::ROTQMBIIr64:
    case SPU::ROTQMBIIv16i8:
    case SPU::ROTQMBIIv2i64:
    case SPU::ROTQMBIIv4i32:
    case SPU::ROTQMBIIv8i16:
    case SPU::ROTQMBYIr128:
    case SPU::ROTQMBYIr128_zext_r16:
    case SPU::ROTQMBYIr128_zext_r32:
    case SPU::ROTQMBYIr128_zext_r64:
    case SPU::ROTQMBYIr128_zext_r8:
    case SPU::ROTQMBYIr64:
    case SPU::ROTQMBYIv16i8:
    case SPU::ROTQMBYIv2i64:
    case SPU::ROTQMBYIv4i32:
    case SPU::ROTQMBYIv8i16:
    case SPU::SHLHIr16:
    case SPU::SHLHIv8i16:
    case SPU::SHLIr32:
    case SPU::SHLIv4i32:
    case SPU::SHLQBIIv16i8:
    case SPU::SHLQBIIv2f64:
    case SPU::SHLQBIIv2i64:
    case SPU::SHLQBIIv4f32:
    case SPU::SHLQBIIv4i32:
    case SPU::SHLQBIIv8i16:
    case SPU::SHLQBYIr128:
    case SPU::SHLQBYIv16i8:
    case SPU::SHLQBYIv2f64:
    case SPU::SHLQBYIv2i64:
    case SPU::SHLQBYIv4f32:
    case SPU::SHLQBYIv4i32:
    case SPU::SHLQBYIv8i16:
    case SPU::SHLQBYr128:
    case SPU::SHLQBYv16i8:
    case SPU::SHLQBYv2f64:
    case SPU::SHLQBYv2i64:
    case SPU::SHLQBYv4f32:
    case SPU::SHLQBYv4i32:
    case SPU::SHLQBYv8i16: {
      // op: i7
      op = getMachineOpValue(MI, MI.getOperand(0));
      Value |= (op & 127U) << 14;
      // op: RA
      op = getMachineOpValue(MI, MI.getOperand(1));
      Value |= (op & 127U) << 7;
      // op: RT
      op = getMachineOpValue(MI, MI.getOperand(2));
      Value |= op & 127U;
      break;
    }
  default:
    std::string msg;
    raw_string_ostream Msg(msg);
    Msg << "Not supported instr: " << MI;
    report_fatal_error(Msg.str());
  }
  return Value;
}

